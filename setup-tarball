#!/bin/bash

#####################################
# Install penguins-eggs-tarball for openSUSE only

function install_tarball() {
    EGGS_PACKAGE=$1
    DISTRO=$2

    echo ""
    echo "Installing penguins-eggs on ${DISTRO} from ${EGGS_PACKAGE}"
    echo ""

    if [ ! -f "$EGGS_PACKAGE" ]; then
        echo "Error: file $EGGS_PACKAGE does not exist."
        exit 1
    fi

    EGGS_HOME="/opt/penguins-eggs/"

    # Remove existing installation
    if [ -d "$EGGS_HOME" ]; then
        $SUDO rm -rf "$EGGS_HOME"
    fi

    # Extract and install
    tar -xzf "$EGGS_PACKAGE" || { echo "Error: cannot extract $EGGS_PACKAGE."; exit 1; }

    mv eggs penguins-eggs
    $SUDO mv penguins-eggs /opt/

    # Symlinks for grub/isolinux themes
    $SUDO ln -sf "${EGGS_HOME}addons/eggs/theme/livecd/isolinux.main.full.cfg" "${EGGS_HOME}addons/eggs/theme/livecd/isolinux.main.cfg"
    $SUDO ln -sf "${EGGS_HOME}addons/eggs/theme/livecd/grub.main.full.cfg" "${EGGS_HOME}addons/eggs/theme/livecd/grub.main.cfg"

    # Bash completions
    if [ -d "/usr/share/bash-completion/completions/" ]; then
        $SUDO ln -sf "${EGGS_HOME}scripts/eggs.bash" /usr/share/bash-completion/completions/eggs.bash
    fi

    # Zsh completions
    if [ -d "/usr/share/zsh/functions/Completion/Zsh/" ]; then
        $SUDO ln -sf "${EGGS_HOME}scripts/_eggs" /usr/share/zsh/functions/Completion/Zsh/
    fi

    # Icon
    if [ -d "/usr/share/icons/" ]; then
        $SUDO ln -sf "${EGGS_HOME}assets/eggs.png" /usr/share/icons/eggs.png
    fi

    # Man page
    if [ -d "/usr/share/man/man1" ]; then
        $SUDO ln -sf "${EGGS_HOME}manpages/doc/man/eggs.1.gz" /usr/share/man/man1/eggs.1.gz
    fi

    # Binary link
    $SUDO ln -sf "${EGGS_HOME}bin/eggs" /usr/bin/eggs

    # Desktop shortcuts
    xdg-user-dirs-update --force
    DESKTOP_DIR=$(xdg-user-dir DESKTOP)
    cp "${EGGS_HOME}addons/eggs/adapt/applications/eggs-adapt.desktop" "${DESKTOP_DIR}"
    cp "${EGGS_HOME}assets/penguins-eggs.desktop" "${DESKTOP_DIR}"

    for f in "$DESKTOP_DIR"/*.desktop; do
        chmod +x "$f"
        gio set -t string "$f" metadata::xfce-exe-checksum "$(sha256sum "$f" | awk '{print $1}')" 2>/dev/null
    done

    # Basic config
    $SUDO eggs config -n

    echo ""
    echo "$EGGS_PACKAGE was installed successfully."
    exit 0
}

#####################################
# Install requirements for openSUSE only

function install_requirements() {
    echo "Installing requirements for openSUSE..."
    echo ""
    $SUDO ./requirements/opensuse/install.sh
    echo ""
    echo "Requirements for $EGGS_PACKAGE were installed."
}

#
# main
#

clear
echo "Installing penguins-eggs-tarball for openSUSE..."
echo ""

# Root check
if [ "$(id -u)" -eq 0 ]; then
    echo "Do not use root directly!"
    echo "Usage: setup /path/to/tarball [requirements]"
    exit 1
fi

# Parameter check
if [ -z "$1" ]; then
    echo "Usage: setup /path/to/penguins-eggs-tarball [requirements]"
    exit 1
fi

# Detect distro (forced to opensuse)
if [ -f /etc/os-release ]; then
    . /etc/os-release
    DISTRO=$ID
    if [[ "$DISTRO" != "opensuse" && "$DISTRO" != opensuse* ]]; then
        echo "Error: This script is for openSUSE only."
        exit 1
    fi
else
    echo "Distro not recognized."
    exit 1
fi

echo "Distro recognized: ${DISTRO}"

# Determine SUDO
if command -v sudo >/dev/null 2>&1; then
    SUDO='sudo'
elif command -v doas >/dev/null 2>&1; then
    SUDO='doas'
else
    echo "Error: neither sudo nor doas is available."
    exit 1
fi

# Install requirements if specified
if [ -n "$2" ]; then
    install_requirements
fi

# Install tarball
install_tarball "$1" "$DISTRO"
